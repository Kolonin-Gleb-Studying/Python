
# # 1 способ задания множества
# a = { 4,'a', 'b',  17, 'c', 'c'}
# # повторяющиеся элементы  не записываются в множество
# print(a)

# # 1 способ задания множества
# b = set()
# print(b) #Пустое множество

# # 3 способ задания множества
# c = frozenset() #Константное множество

# c.add(1) 

#Создаем список
# a = ['q', 'w', 'e', 'w', 't', 'w']
# print(a) #Выводим список
# print(set(a)) #Выводим множество сформированное из списка


# a = {32, 45, 43.24, 76}
# x = 45
# print(x in a) #Принадлежит ли элемент множеству


# setA = {32, 45, 43.24, 76}
# setB = {33, 40, 77}
# print(setA.isdisjoint(setB))

# #isdeijoint() - возращает True, 
# #если у переданного множества нет общих элементов
# #с вызывающим множеством

# print("\n\n")

# setC = {1, 2, 3, 4}
# setD = {1, 2, 4, 3}

# print(setC == setD) # Равны ли множества


# # setC = {1, 2, 7, 4}
# # setD = {5, 6, 7, 8}
# # setC.update(setD) # Включение эл. множества в множество
# # print(setC)

# # Запись пересечения множеств в 
# # вызывающее множество
# # setC.intersection_update(setD) 
# # print(setC)

# # Перезапись вызывающего множества числами,
# # которые есть в нем множестве, но
# # нет в передаваемом множестве
# # setC.difference_update(setD)
# # print(setC)

a = {32, 45, 23}
x = {23, 45, 12}

# Перезапись вызывающего множества
# элементами, что являются уникальными в каждом множестве
a.symmetric_difference_update(x)
print(a)




